topBandToCase = {
    # goes in order:        ihg         green is 0
    #  F   R   B   L      j xxx f       orange is 1
    # abc def ghi jkl     k xxx e       blue is 2
    #                     l xxx d       red is 3
    #                       abc

    # band format: pll case
    "202313020131": "H",
    "232313000121": "Ua",
    "212323000131": "Ub",
    "101232323010": "Z",
    "331203010122": "Aa",
    "001212320133": "Ab",
    "123032301210": "E",
    "203032320111": "F",
    "223002330111": "Ja",
    "122311233000": "Jb",
    "112321203030": "Ra",
    "320103011232": "Rb",
    "223012300131": "T",
    "022311200133": "Na",
    "220113002331": "Nb",
    "220103032311": "V",
    "220133012301": "Y",
    "233012320101": "Ga",
    "203022310131": "Gb",
    "203012330121": "Gc",
    "213002320131": "Gd"
}


pllSolution = {
    # PLL Case: sequence of moves

    # edges only
    "H": ["M2", "U'", "M2", "U2", "M2", "U'", "M2"],
    "Ua": ["M2", "U", "M", "U2", "M'", "U", "M2"],
    "Ub": ["M2", "U'", "M", "U2", "M'", "U'", "M2"],
    "Z": ["M2", "U'", "M2", "U'", "M'", "U2", "M2", "U2", "M'"],

    # corners only
    "Aa": ["X", "R'", "U", "R'", "D2", "R", "U'", "R'", "D2", "R2", "X'"],
    "Ab": ["X'", "L2", "D2", "L", "U", "L'", "D2", "L", "U'", "L", "X"],
    "E": ["X'", "R", "U'", "R'", "D", "R", "U", "R'", "D'", "R", "U", "R'", "D", "R", "U'", "R'", "D'", "X"],

    # adjacent corner swap
    "F": ["R'", "U'", "F'", "R", "U", "R'", "U'", "R'", "F", "R2", "U'", "R'", "U'", "R", "U", "R'", "U", "R"],
    "Ja": ["F", "U'", "R", "U'", "R'", "U'", "R", "U", "R'", "F'", "R", "U", "R'", "U'", "R'", "F", "R", "U", "F'"],
    "Jb": ["R", "U", "R'", "F'", "R", "U", "R'", "U'", "R'", "F", "R2", "U'", "R'"],
    "Ra": ["R", "U'", "R'", "U'", "R", "U", "R", "D", "R'", "U'", "R", "D'", "R'", "U2", "R'"],
    "Rb": ["R2", "F", "R", "U", "R", "U'", "R'", "F'", "R", "U2", "R'", "U2", "R"],
    "T": ["R", "U", "R'", "U'", "R'", "F", "R2", "U'", "R'", "U'", "R", "U", "R'", "F'"],

    # diagonal corner swap
    "Na": ["R", "U", "R'", "U", "R", "U", "R'", "F'", "R", "U", "R'", "U'", "R'", "F", "R2", "U'", "R'", "U2", "R", "U'", "R'"],
    "Nb": ["R'", "U", "R", "U'", "R'", "F'", "U'", "F", "R", "U", "R'", "F", "R'", "F'", "R", "U'", "R"],
    "V": ["R'", "U", "R'", "U'", "y", "R'", "F'", "R2", "U'", "R'", "U", "R'", "F", "R", "F"],
    "Y": ["F", "R", "U'", "R'", "U'", "R", "U", "R'", "F'", "R", "U", "R'", "U'", "R'", "F", "R", "F'"],

    # G perms
    "Ga": ["R2", "U", "R'", "U", "R'", "U'", "R", "U'", "R2", "U'", "D", "R'", "U", "R", "D'"],
    "Gb": ["R'", "U'", "R", "U", "D'", "R2", "U", "R'", "U", "R", "U'", "R", "U'", "R2", "D"],
    "Gc": ["R2", "U'", "R", "U'", "R", "U", "R'", "U", "R2", "U", "D'", "R", "U'", "R'", "D"],
    "Gd": ["R", "U", "R'", "U'", "D", "R2", "U'", "R", "U'", "R'", "U", "R'", "U", "R2", "D'"]
}
